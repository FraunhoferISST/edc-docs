"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[2844],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=i,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(f,a(a({ref:t},d),{},{components:n})):r.createElement(f,a({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9164:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const o={},a=void 0,l={unversionedId:"submodule/Connector/extensions/common/iam/decentralized-identity/README",id:"submodule/Connector/extensions/common/iam/decentralized-identity/README",title:"README",description:"Folder structure",source:"@site/docs/submodule/Connector/extensions/common/iam/decentralized-identity/README.md",sourceDirName:"submodule/Connector/extensions/common/iam/decentralized-identity",slug:"/submodule/Connector/extensions/common/iam/decentralized-identity/",permalink:"/edc-docs/docs/submodule/Connector/extensions/common/iam/decentralized-identity/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/extensions/common/iam/decentralized-identity/README.md",tags:[],version:"current",frontMatter:{}},s={},c=[{value:"Folder structure",id:"folder-structure",level:2},{value:"Terminology",id:"terminology",level:2},{value:"Verification process",id:"verification-process",level:2},{value:"General notes and restrictions",id:"general-notes-and-restrictions",level:2}],d={toc:c};function u(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"folder-structure"},"Folder structure"),(0,i.kt)("p",null,'These extensions contain modules that implement the "Decentralized Identifier" use case. In particular:'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"identity-did-spi"),": contains extension points for the distributed identity subsystem"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"identity-did-crypto"),": contains the cryptographic utilities"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"identity-did-core"),": contains core services, including the ",(0,i.kt)("inlineCode",{parentName:"li"},"DidResolverRegistry")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"identity-did-service"),": contains the ",(0,i.kt)("inlineCode",{parentName:"li"},"DecentralizedIdentifierService"),", which is an implementation of the ",(0,i.kt)("inlineCode",{parentName:"li"},"IdentityService"),"\ninterface."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"identity-did-web"),": contains support for resolving Web DIDs. "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"registration-service"),": contains a periodic job that crawls the ION network for DIDs of a particular type"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"registration-service-api"),": contains a REST API for the aforementioned registration service"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"identity-did-test"),": contains a utility class to load an RSA key from a *.jks file. See\nalso ",(0,i.kt)("a",{target:"_blank",href:n(7235).Z},"here"))),(0,i.kt)("p",null,"Those modules are still under development and should not be used in production scenarios! Code (APIs, interfaces,\nimplementations) are likely to change in the future and without notice."),(0,i.kt)("h2",{id:"terminology"},"Terminology"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Verifiable Credential (VC) and JSON Web Tokens (JWT) are the same thing. Or: a VC is represented by a JWT"),(0,i.kt)("li",{parentName:"ul"},"the Verifier is a trusted third party, e.g. some company like Accenture used to verify additional object data"),(0,i.kt)("li",{parentName:"ul"},'"(additional) object data" refers to an arbitrary set of properties or a JSON structure that are stored in a\nconnector\'s Hub'),(0,i.kt)("li",{parentName:"ul"},"DID and DID Document are the same thing"),(0,i.kt)("li",{parentName:"ul"},"VerifiableAssertion = hub data object")),(0,i.kt)("h2",{id:"verification-process"},"Verification process"),(0,i.kt)("p",null,"The following sequence has to be performed whenever a request is received:"),(0,i.kt)("p",null,"C ... Consumer, P ... Provider"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"C presents JWT to P (in message header, i.e. in the ",(0,i.kt)("inlineCode",{parentName:"li"},"_securityToken_")," field of C IDS messages)"),(0,i.kt)("li",{parentName:"ol"},"P resolves the DID URL from the VC received from C"),(0,i.kt)("li",{parentName:"ol"},"P resolves C's DID Document from ION and from it retrieves C's public key and C's Hub URL"),(0,i.kt)("li",{parentName:"ol"},"P verifies C's VC using C's public key (from the DID Document)"),(0,i.kt)("li",{parentName:"ol"},"P obtains object data from C's Hub:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"P sends query to C's hub together with its DID url"),(0,i.kt)("li",{parentName:"ul"},"C decrypts hub data object and re-encrypts with P's public key (obtained from P's DID)"),(0,i.kt)("li",{parentName:"ul"},"P receives and decrypts C's hub data object"))),(0,i.kt)("li",{parentName:"ol"},"P obtains the Verifier's DID document from ION (Verifier's DID URL must be contained in the hub data object)"),(0,i.kt)("li",{parentName:"ol"},"P uses Verifier's public key to verify C's object data")),(0,i.kt)("h2",{id:"general-notes-and-restrictions"},"General notes and restrictions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The Verifier (or Attestor) in this demo is just another Key Pair"),(0,i.kt)("li",{parentName:"ul"},"DIDs are generated and anchored once during initial setup, it does ",(0,i.kt)("strong",{parentName:"li"},"not")," happen during deployment"),(0,i.kt)("li",{parentName:"ul"},"This will be one set of object data per hub and one hub per connector (so no filtering at this time)"),(0,i.kt)("li",{parentName:"ul"},"The hub runs in its separate runtime and exposes a simple GET API")),(0,i.kt)("p",null,"This module is currently under development and will someday contain a Java-port of\nthe ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/decentralized-identity/ion-tools"},"ION-Tools")," and parts of\nthe ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/decentralized-identity/ion-sdk"},"ION-SDK"),"."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Please do not use this module in a production environment yet, interfaces and implementations might change without\nprior notification.")))}u.isMDXComponent=!0},7235:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/readme-keystore-08268fe6c078adbdb3a1ec5fa9c73c29.txt"}}]);