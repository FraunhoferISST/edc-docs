"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[7082],{3905:(e,o,t)=>{t.d(o,{Zo:()=>u,kt:()=>m});var r=t(7294);function n(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function c(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);o&&(r=r.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?c(Object(t),!0).forEach((function(o){n(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function i(e,o){if(null==e)return{};var t,r,n=function(e,o){if(null==e)return{};var t,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],o.indexOf(t)>=0||(n[t]=e[t]);return n}(e,o);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=r.createContext({}),d=function(e){var o=r.useContext(s),t=o;return e&&(t="function"==typeof e?e(o):a(a({},o),e)),t},u=function(e){var o=d(e.components);return r.createElement(s.Provider,{value:o},e.children)},l={inlineCode:"code",wrapper:function(e){var o=e.children;return r.createElement(r.Fragment,{},o)}},p=r.forwardRef((function(e,o){var t=e.components,n=e.mdxType,c=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=d(t),m=n,g=p["".concat(s,".").concat(m)]||p[m]||l[m]||c;return t?r.createElement(g,a(a({ref:o},u),{},{components:t})):r.createElement(g,a({ref:o},u))}));function m(e,o){var t=arguments,n=o&&o.mdxType;if("string"==typeof e||n){var c=t.length,a=new Array(c);a[0]=p;var i={};for(var s in o)hasOwnProperty.call(o,s)&&(i[s]=o[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,a[1]=i;for(var d=2;d<c;d++)a[d]=t[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},4139:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>s,contentTitle:()=>a,default:()=>l,frontMatter:()=>c,metadata:()=>i,toc:()=>d});var r=t(7462),n=(t(7294),t(3905));const c={},a="JaCoCo with Github Action",i={unversionedId:"submodule/Connector/docs/developer/decision-records/2022-02-10-code-coverage/jacoco_github_action",id:"submodule/Connector/docs/developer/decision-records/2022-02-10-code-coverage/jacoco_github_action",title:"JaCoCo with Github Action",description:"Code coverage coming from JaCoCo reports can be added to a PR using Github Action JaCoCo Report.",source:"@site/docs/submodule/Connector/docs/developer/decision-records/2022-02-10-code-coverage/jacoco_github_action.md",sourceDirName:"submodule/Connector/docs/developer/decision-records/2022-02-10-code-coverage",slug:"/submodule/Connector/docs/developer/decision-records/2022-02-10-code-coverage/jacoco_github_action",permalink:"/edc-docs/docs/submodule/Connector/docs/developer/decision-records/2022-02-10-code-coverage/jacoco_github_action",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/docs/developer/decision-records/2022-02-10-code-coverage/jacoco_github_action.md",tags:[],version:"current",frontMatter:{}},s={},d=[],u={toc:d};function l(e){let{components:o,...c}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,c,{components:o,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"jacoco-with-github-action"},"JaCoCo with Github Action"),(0,n.kt)("p",null,"Code coverage coming from JaCoCo reports can be added to a PR using ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/jacoco-report"},"Github Action JaCoCo Report"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"- name: Set Coverage Report Paths\n    id: coverage-paths\n    run: |\n      echo -n \"::set-output name=COVERAGE_REPORT_PATHS::$(find ~+ -name jacocoTestReport.xml -size +300c -printf '%p,' | sed 's/.$//')\"\n\n- name: Add coverage to PR\n    id: jacoco\n    uses: madrapps/jacoco-report@v1.2\n    with:\n      paths: ${{ steps.coverage-paths.outputs.COVERAGE_REPORT_PATHS }} # Comma separated absolute paths of the generated jacoco xml files\n      token: ${{ secrets.GITHUB_TOKEN }} # Github personal token to add commits to Pull Request\n      min-coverage-overall: 40 # The minimum code coverage that is required to pass for overall project\n      min-coverage-changed-files: 60 #The minimum code coverage that is required to pass for changed files\n")),(0,n.kt)("p",null,"The above workflow will send a comment to the PR showing the code coverage of the files modified in the PR and the overall project code coverage."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Code Coverage with JaCoCo and Github Action",src:t(9289).Z,width:"952",height:"238"})))}l.isMDXComponent=!0},9289:(e,o,t)=>{t.d(o,{Z:()=>r});const r=t.p+"assets/images/code-coverage-jacoco-gitbhub-actions-14966136b3bd7c954d4772b48ab2a37f.png"}}]);