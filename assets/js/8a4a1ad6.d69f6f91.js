"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[6711],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},64442:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={},i="Jetty",l={unversionedId:"submodule/Connector/extensions/common/http/jetty-core/README",id:"submodule/Connector/extensions/common/http/jetty-core/README",title:"Jetty",description:"This extension provides a JettyService, a Servlet Context Container that can expose REST API on a Jersey based",source:"@site/docs/submodule/Connector/extensions/common/http/jetty-core/README.md",sourceDirName:"submodule/Connector/extensions/common/http/jetty-core",slug:"/submodule/Connector/extensions/common/http/jetty-core/",permalink:"/edc-docs/docs/submodule/Connector/extensions/common/http/jetty-core/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/extensions/common/http/jetty-core/README.md",tags:[],version:"current",frontMatter:{}},s={},p=[{value:"Terminate SSL in the connector runtime",id:"terminate-ssl-in-the-connector-runtime",level:2},{value:"Expose different web contexts",id:"expose-different-web-contexts",level:2},{value:"Best practice",id:"best-practice",level:2},{value:"Limitations",id:"limitations",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"jetty"},"Jetty"),(0,a.kt)("p",null,"This extension provides a ",(0,a.kt)("inlineCode",{parentName:"p"},"JettyService"),", a Servlet Context Container that can expose REST API on a Jersey based\nWebServer."),(0,a.kt)("h2",{id:"terminate-ssl-in-the-connector-runtime"},"Terminate SSL in the connector runtime"),(0,a.kt)("p",null,"While it is generally advised to handle HTTPS/SSL/TLS termination through deployment mechanisms such as\nKubernetes, or an API gateway, there are situations where SSL termination directly in the connector is\nneeded."),(0,a.kt)("p",null,"In order to do that, users must set up a Java keystore (\nsee ",(0,a.kt)("a",{parentName:"p",href:"https://www.eclipse.org/jetty/documentation/jetty-10/operations-guide/index.html#og-keystore"},"Jetty documentation"),")\nthat contains the certificate. Both official and self-signed certificates work."),(0,a.kt)("p",null,"The following Java properties can be used to configure Jetty to actually use the keystore:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Config Key"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"),(0,a.kt)("th",{parentName:"tr",align:null},"Default"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"edc.web.https.keystore.password")),(0,a.kt)("td",{parentName:"tr",align:null},"Password for the keystore"),(0,a.kt)("td",{parentName:"tr",align:null},"yes"),(0,a.kt)("td",{parentName:"tr",align:null},'"password"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"edc.web.https.keymanager.password")),(0,a.kt)("td",{parentName:"tr",align:null},"Password for the private key"),(0,a.kt)("td",{parentName:"tr",align:null},"yes"),(0,a.kt)("td",{parentName:"tr",align:null},'"password"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"edc.web.https.keystore.path")),(0,a.kt)("td",{parentName:"tr",align:null},"Absolute path on the filesystem where the keystore is located"),(0,a.kt)("td",{parentName:"tr",align:null},"yes"),(0,a.kt)("td",{parentName:"tr",align:null},"null")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"edc.web.https.keystore.type")),(0,a.kt)("td",{parentName:"tr",align:null},'Type of keystore, could be "JKS" or "PKCS12"'),(0,a.kt)("td",{parentName:"tr",align:null},"no"),(0,a.kt)("td",{parentName:"tr",align:null},'"PKCS12"')))),(0,a.kt)("h2",{id:"expose-different-web-contexts"},"Expose different web contexts"),(0,a.kt)("p",null,"By default we have the ",(0,a.kt)("inlineCode",{parentName:"p"},"web.http.port"),"\nand ",(0,a.kt)("inlineCode",{parentName:"p"},"web.http.path")," config entry with the following default values:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-properties"},"web.http.port=8181\nweb.http.path=/api\n")),(0,a.kt)("p",null,"That will expose any resource under ",(0,a.kt)("inlineCode",{parentName:"p"},"http://<host>:8181/api/*"),"."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Please note that under the hood ",(0,a.kt)("inlineCode",{parentName:"em"},"web.http.*")," gets expanded to ",(0,a.kt)("inlineCode",{parentName:"em"},"web.http.default.*"))),(0,a.kt)("p",null,'In some situations it is required to expose a part of the public API under another port or path, which can be achieved\nby using port mappings. First, a "named"\nproperty group needs to be created using the following configuration. The example will create a port mapping with the\nname/alias ',(0,a.kt)("inlineCode",{parentName:"p"},'"health"'),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-properties"},"web.http.health.port=9191\nweb.http.health.path=/api/v1/health\n")),(0,a.kt)("p",null,"Second, the resource must be registered using that context alias (",(0,a.kt)("inlineCode",{parentName:"p"},'"health"'),"):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class YourExtension {\n\n    @Inject\n    private WebService webService;\n\n    void initialize(ServiceExtensionContext context) {\n        //...\n        webService.registerResource("health", new HealthController());\n    }\n}\n')),(0,a.kt)("p",null,"which will expose any resources that the ",(0,a.kt)("inlineCode",{parentName:"p"},"HealthController")," provides under ",(0,a.kt)("inlineCode",{parentName:"p"},"http://<host>:9191/api/v1/health/*")),(0,a.kt)("h2",{id:"best-practice"},"Best practice"),(0,a.kt)("p",null,"In situations where an API is made up of multiple controllers, it is best to expose the APIs base path using this\nmechanism, register the controllers with the\nport mapping's context alias and have the controllers themselves handle any sub-paths."),(0,a.kt)("h2",{id:"limitations"},"Limitations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Attempting to register two port mappings with the same port will raise an exception. This also takes into account the\nimplicit default values"),(0,a.kt)("li",{parentName:"ul"},"Attempting to register two port mappings with the same path will raise an exception, even if different ports are used.\nThis has to do with the way how servlet\ncontexts are mapped internally and may change in future releases.")))}u.isMDXComponent=!0}}]);