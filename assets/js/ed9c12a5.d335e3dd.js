"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[9968],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=o.createContext({}),c=function(e){var t=o.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return o.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,h=p["".concat(d,".").concat(m)]||p[m]||u[m]||a;return n?o.createElement(h,i(i({ref:t},s),{},{components:n})):o.createElement(h,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},70881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const a={},i="Automated Documentation Tooling",l={unversionedId:"submodule/Connector/docs/developer/decision-records/2022-09-23-extract-metamodel-and-autodoc/README",id:"submodule/Connector/docs/developer/decision-records/2022-09-23-extract-metamodel-and-autodoc/README",title:"Automated Documentation Tooling",description:"Decision",source:"@site/docs/submodule/Connector/docs/developer/decision-records/2022-09-23-extract-metamodel-and-autodoc/README.md",sourceDirName:"submodule/Connector/docs/developer/decision-records/2022-09-23-extract-metamodel-and-autodoc",slug:"/submodule/Connector/docs/developer/decision-records/2022-09-23-extract-metamodel-and-autodoc/",permalink:"/edc-docs/docs/submodule/Connector/docs/developer/decision-records/2022-09-23-extract-metamodel-and-autodoc/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/docs/developer/decision-records/2022-09-23-extract-metamodel-and-autodoc/README.md",tags:[],version:"current",frontMatter:{}},d={},c=[{value:"Decision",id:"decision",level:2},{value:"Rationale",id:"rationale",level:2},{value:"Approach",id:"approach",level:2},{value:"Caveats",id:"caveats",level:2}],s={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"automated-documentation-tooling"},"Automated Documentation Tooling"),(0,r.kt)("h2",{id:"decision"},"Decision"),(0,r.kt)("p",null,'The tooling code for automatic documentation generation ("autodoc",\ncf. ',(0,r.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/docs/developer/decision-records/2022-08-04-documentation-automation/"},"this decision record"),")\nas well as the model code (i.e. the runtime metamodel) will be moved out into\na ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/paullatzelsperger/GradlePlugins"},"new repository"),"."),(0,r.kt)("h2",{id:"rationale"},"Rationale"),(0,r.kt)("p",null,"1) ",(0,r.kt)("inlineCode",{parentName:"p"},"autodoc"),"\nThis feature will be made available through a Gradle plugin, which needs to be available at build time of the EDC\ncode. Gradle plugins are published using the ",(0,r.kt)("a",{parentName:"p",href:"https://plugins.gradle.org/"},"Gradle Plugin Portal"),". Therefor the plugin\nneeds to be built and published ",(0,r.kt)("em",{parentName:"p"},"before")," building/publishing EDC."),(0,r.kt)("p",null,"2) ",(0,r.kt)("inlineCode",{parentName:"p"},"runtime-metamodel"),"\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"autodoc")," feature has compile-time dependencies onto some metamodel annotations, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"@Inject"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"@Setting"),"\n, ",(0,r.kt)("inlineCode",{parentName:"p"},"@Extension")," etc., which are also referenced by EDC. Thus, to break a cyclic dependency, the ",(0,r.kt)("inlineCode",{parentName:"p"},"runtime-metamodel")," is\nmoved out into the plugin repo as well."),(0,r.kt)("h2",{id:"approach"},"Approach"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Both these aforementioned modules will be moved out into\na ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/paullatzelsperger/GradlePlugins"},"new repository"),"."),(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("inlineCode",{parentName:"li"},"runtime-metamodel")," is built and published to MavenCentral at the following:\ncoordinates ",(0,r.kt)("inlineCode",{parentName:"li"},"org.eclipse.dataspaceconnector:runtime-metamodel:<VERSION>")),(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("inlineCode",{parentName:"li"},"autodoc")," plugin has its own release cycle and versioning scheme, it will be published with the ID ",(0,r.kt)("inlineCode",{parentName:"li"},"autodoc")),(0,r.kt)("li",{parentName:"ul"},"EDC will henceforth reference the ",(0,r.kt)("inlineCode",{parentName:"li"},"runtime-metamodel")," artifact as compile-time dependency")),(0,r.kt)("h2",{id:"caveats"},"Caveats"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"there is currently a pending discussion regarding rebranding of EDC, group-ids and the release process etc. Until that\ndiscussion is finalized, the ",(0,r.kt)("inlineCode",{parentName:"li"},"runtime-metamodel")," will temporarily be available as version ",(0,r.kt)("inlineCode",{parentName:"li"},"0.0.1-SNAPSHOT"),"."),(0,r.kt)("li",{parentName:"ul"},"The Gradle plugin does not support SNAPSHOT versions, it will be made available as version ",(0,r.kt)("inlineCode",{parentName:"li"},"0.0.1"),". Every version\nupdate will follow the SemVer paradigm.")))}u.isMDXComponent=!0}}]);