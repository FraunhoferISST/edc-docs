"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[8293],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),h=a,m=u["".concat(l,".").concat(h)]||u[h]||p[h]||r;return n?o.createElement(m,i(i({ref:t},d),{},{components:n})):o.createElement(m,i({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},72566:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=n(87462),a=(n(67294),n(3905));const r={},i=void 0,s={unversionedId:"submodule/Connector/README",id:"submodule/Connector/README",title:"README",description:"EDC Connector",source:"@site/docs/submodule/Connector/README.md",sourceDirName:"submodule/Connector",slug:"/submodule/Connector/",permalink:"/edc-docs/docs/submodule/Connector/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Contributing to the Project",permalink:"/edc-docs/docs/submodule/Connector/CONTRIBUTING"},next:{title:"EDC Data Dashboard",permalink:"/edc-docs/docs/submodule/DataDashboard/"}},l={},c=[{value:"Built with",id:"built-with",level:3},{value:"Documentation",id:"documentation",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"Onboarding and first steps",id:"onboarding-and-first-steps",level:3},{value:"Samples",id:"samples",level:4},{value:"Add Maven dependencies",id:"add-maven-dependencies",level:3},{value:"Using <code>SNAPSHOT</code> versions",id:"using-snapshot-versions",level:4},{value:"Using release versions",id:"using-release-versions",level:4},{value:"Checkout and build from source",id:"checkout-and-build-from-source",level:3},{value:"Optional Setup your IDE",id:"optional-setup-your-ide",level:3},{value:"Run your first connector",id:"run-your-first-connector",level:3},{value:"Generate the OpenApi specification",id:"generate-the-openapi-specification",level:3},{value:"Directory structure",id:"directory-structure",level:2},{value:"<code>spi</code>",id:"spi",level:3},{value:"<code>core</code>",id:"core",level:3},{value:"<code>extensions</code>",id:"extensions",level:3},{value:"<code>launchers</code>",id:"launchers",level:3},{value:"<code>resources/charts</code>",id:"resourcescharts",level:3},{value:"<code>data-protocols</code>",id:"data-protocols",level:3},{value:"Releases",id:"releases",level:2},{value:"Roadmap",id:"roadmap",level:3},{value:"Tags",id:"tags",level:3},{value:"Contributing",id:"contributing",level:2}],d={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{align:"center"},(0,a.kt)("br",null),(0,a.kt)("img",{alt:"Logo",width:"100",src:"resources/media/logo.png"}),(0,a.kt)("br",null),"EDC Connector",(0,a.kt)("br",null)),(0,a.kt)("div",{align:"center"},(0,a.kt)("a",{href:"https://github.com/eclipse-edc/Connector/actions/workflows/verify.yaml?query=branch%3Amain"},(0,a.kt)("img",{src:"https://img.shields.io/github/actions/workflow/status/eclipse-edc/Connector/verify.yaml?branch=main&logo=GitHub&style=flat-square",alt:"Tests status"})),(0,a.kt)("a",{href:"https://app.codecov.io/gh/eclipse-edc/Connector"},(0,a.kt)("img",{src:"https://img.shields.io/codecov/c/github/eclipse-edc/Connector?style=flat-square",alt:"Coverage"})),(0,a.kt)("a",{href:"https://discord.gg/n4sD9qtjMQ"},(0,a.kt)("img",{src:"https://img.shields.io/badge/discord-chat-brightgreen.svg?style=flat-square&logo=discord",alt:"Discord chat"})),(0,a.kt)("a",{href:"https://search.maven.org/artifact/org.eclipse.edc/boot"},(0,a.kt)("img",{src:"https://img.shields.io/maven-central/v/org.eclipse.edc/boot?logo=apache-maven&style=flat-square&label=latest%20version",alt:"Version"})),(0,a.kt)("a",{href:"https://www.apache.org/licenses/LICENSE-2.0"},(0,a.kt)("img",{src:"https://img.shields.io/github/license/eclipse-edc/Connector?style=flat-square&logo=apache",alt:"License"}))),(0,a.kt)("div",{align:"center"},(0,a.kt)("a",{href:"https://ci.eclipse.org/edc/job/EDC-Snapshot"},(0,a.kt)("img",{src:"https://img.shields.io/jenkins/build?jobUrl=https%3A%2F%2Fci.eclipse.org%2Fedc%2Fjob%2FEDC-Snapshot%2F&label=snapshot-build&style=flat-square",alt:"License"})),(0,a.kt)("a",{href:"https://ci.eclipse.org/edc/job/EDC-Nightly-Snapshot"},(0,a.kt)("img",{src:"https://img.shields.io/jenkins/build?jobUrl=https%3A%2F%2Fci.eclipse.org%2Fedc%2Fjob%2FPlayground%2Fjob%2FAutomaticBuilds%2Fjob%2FBuild-Components-Nightly%2F&label=nightly-build&style=flat-square",alt:"License"}))),(0,a.kt)("p",{align:"center"},(0,a.kt)("a",{href:"#contributing"},"Contribute")," \u2022",(0,a.kt)("a",{href:"https://eclipse-edc.github.io/docs/"},"Docs")," \u2022",(0,a.kt)("a",{href:"https://github.com/eclipse-edc/Connector/issues"},"Issues")," \u2022",(0,a.kt)("a",{href:"https://github.com/eclipse-edc/Connector/blob/main/LICENSE"},"License")," \u2022",(0,a.kt)("a",{href:"https://github.com/eclipse-edc/Connector/discussions/1303"},"Q&A")),(0,a.kt)("p",null,"The Eclipse Dataspace Connector provides a framework for sovereign, inter-organizational data exchange. It will\nimplement the International Data Spaces standard (IDS) as well as relevant protocols associated with GAIA-X. The\nconnector is designed in an extensible way in order to support alternative protocols and integrate in various\necosystems."),(0,a.kt)("p",null,"Please also refer to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("a",{parentName:"li",href:"https://projects.eclipse.org/projects/technology.edc"},"Eclipse Project Homepage")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.internationaldataspaces.org"},"International Data Spaces")),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("a",{parentName:"li",href:"https://gaia-x.eu"},"GAIA-X")," project")),(0,a.kt)("h3",{id:"built-with"},"Built with"),(0,a.kt)("p",null,"One of the guiding principles in developing the connector is simplicity and keeping the core small and efficient with as\nlittle external dependencies as possible to avoid version conflicts. We do not want to force any third-party\ndependencies onto our users, so we aim to avoid any of the big frameworks. Of course, if you want to use them, you still\ncan add them to your extensions (see: ","[TBW]","). The connector is a plain Java application built with Gradle, but it can be\nembedded into any form of application deployment."),(0,a.kt)("h3",{id:"documentation"},"Documentation"),(0,a.kt)("p",null,"Developer documentation can be found under ",(0,a.kt)("a",{parentName:"p",href:"docs/developer/"},"docs/developer"),",\nwhere the main concepts and decisions are captured as ",(0,a.kt)("a",{parentName:"p",href:"docs/developer/decision-records/"},"decision records"),"."),(0,a.kt)("p",null,"Some more documentation can be found at ",(0,a.kt)("a",{parentName:"p",href:"extensions/"},"extensions"),", ",(0,a.kt)("a",{parentName:"p",href:"launchers/"},"launchers")," and\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/eclipse-edc/Samples"},"the samples repository"),"."),(0,a.kt)("p",null,"For detailed information about the whole project, please take a look at\nour ",(0,a.kt)("a",{parentName:"p",href:"https://eclipse-edc.github.io/docs"},"GitHub pages"),"."),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("h3",{id:"onboarding-and-first-steps"},"Onboarding and first steps"),(0,a.kt)("p",null,"If you are not yet familiar with the EDC nomenclature, we strongly advise reading the\n",(0,a.kt)("a",{parentName:"p",href:"https://eclipse-edc.github.io/docs/#/"},"documentation")," and/or watching the\n",(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/@eclipsedataspaceconnector9622/featured"},"introductory videos"),"."),(0,a.kt)("h4",{id:"samples"},"Samples"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/eclipse-edc/Samples"},"Samples repository")," provides a set of examples for getting familiar with\nthe EDC framework and learning how to set up and use a connector. The samples begin with the very basics (e.g. learning\nhow to write an extension or use a configuration file) and then move on to more complex scenarios (e.g. performing\ndifferent data transfers). More samples will be added in the future, so be sure to check back regularly."),(0,a.kt)("h3",{id:"add-maven-dependencies"},"Add Maven dependencies"),(0,a.kt)("p",null,"Official versions are available through ",(0,a.kt)("a",{parentName:"p",href:"https://search.maven.org/search?q=org.eclipse.edc"},"MavenCentral"),"\n.\nPlease add the following instructions in your ",(0,a.kt)("inlineCode",{parentName:"p"},"build.gradle[.kts]")," file (if not already present):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"repositories {\n    mavenCentral()\n    // ... other maven repos\n}\n")),(0,a.kt)("p",null,"We ",(0,a.kt)("strong",{parentName:"p"},"strongly")," recommend to use official versions and only switch to snapshots if there is a clear need to do so, or\nyou've been instructed to do so, e.g. to verify a bugfix."),(0,a.kt)("p",null,"All artifacts are under the ",(0,a.kt)("inlineCode",{parentName:"p"},"org.eclipse.edc")," group id, for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'dependencies {\n    implementation("org.eclipse.edc:spi:core-spi:<<version>>")\n    // any other dependencies\n}\n')),(0,a.kt)("h4",{id:"using-snapshot-versions"},"Using ",(0,a.kt)("inlineCode",{parentName:"h4"},"SNAPSHOT")," versions"),(0,a.kt)("p",null,"In addition, EDC regularly publishes snapshot versions, which are available at Sonatype's snapshot\nrepository. In\norder to add them to your build configuration, simply add this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'repositories {\n    mavenCentral()\n    maven {\n        url = uri("https://oss.sonatype.org/content/repositories/snapshots/")\n    }\n    // any other repos\n}\n')),(0,a.kt)("p",null,"Then you can add snapshot dependencies by simply using the ",(0,a.kt)("inlineCode",{parentName:"p"},"-SNAPSHOT")," version suffix:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'dependencies {\n    implementation("org.eclipse.edc:spi:core-spi:0.0.1-SNAPSHOT")\n    // any other dependencies\n}\n')),(0,a.kt)("p",null,"You may check MavenCentral for a comprehensive list of all official versions."),(0,a.kt)("p",null,"Please be aware of the following pitfalls:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"snapshots are by definition unstable - every new snapshot replaces an old one"),(0,a.kt)("li",{parentName:"ul"},"this may cause unrepeatable builds"),(0,a.kt)("li",{parentName:"ul"},"snapshots are created irregularly, we do not have any fixed publish schedule")),(0,a.kt)("h4",{id:"using-release-versions"},"Using release versions"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"We plan to have actual release versions starting some time mid 2022. Please check back soon.")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"For more information about versioning please refer to the ",(0,a.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/docs/developer/releases"},"release documentation"))),(0,a.kt)("h3",{id:"checkout-and-build-from-source"},"Checkout and build from source"),(0,a.kt)("p",null,"The project requires JDK 11+. To get started:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git clone git@github.com:eclipse-edc/Connector.git\n\ncd Connector\n\n./gradlew clean build\n")),(0,a.kt)("p",null,"That will build the connector and run unit tests."),(0,a.kt)("h3",{id:"optional-setup-your-ide"},"[Optional]"," Setup your IDE"),(0,a.kt)("p",null,"If you wish to configure your IDE/editor to automatically apply the EDC code style, please\nfollow ",(0,a.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/styleguide"},"this guide"),"."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Note: the style guide will be checked/enforced in GitHub Actions.")),(0,a.kt)("h3",{id:"run-your-first-connector"},"Run your first connector"),(0,a.kt)("p",null,'Connectors can be started using the concept of "launchers", which are essentially compositions of Java modules defined\nas gradle build files.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"It is expected that everyone who wants to use the EDC will create their own launcher, customized\nto the implemented use cases.")),(0,a.kt)("p",null,"There is an ",(0,a.kt)("inlineCode",{parentName:"p"},"ids-connector")," launcher, which launches a simple connector that has no cloud-based extensions.\nHowever, it needs an IDS certificate and a running DAPS. So make sure to take a look at\n",(0,a.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/launchers/ids-connector/"},"this guide")," first."),(0,a.kt)("p",null,"Then run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"./gradlew :launchers:ids-connector:shadowJar\njava -jar launchers/ids-connector/build/libs/dataspace-connector.jar\n")),(0,a.kt)("p",null,"Once it says ",(0,a.kt)("inlineCode",{parentName:"p"},'"Dataspace Connector ready"')," the connector is up and running."),(0,a.kt)("p",null,"More information about the extension concept can be found here ","[TBW]","."),(0,a.kt)("p",null,"More information about shadowJar can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/johnrengelman/shadow"},"here"),"."),(0,a.kt)("h3",{id:"generate-the-openapi-specification"},"Generate the OpenApi specification"),(0,a.kt)("p",null,"Please refer to ",(0,a.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/docs/developer/openapi"},"this document"),"."),(0,a.kt)("h2",{id:"directory-structure"},"Directory structure"),(0,a.kt)("h3",{id:"spi"},(0,a.kt)("inlineCode",{parentName:"h3"},"spi")),(0,a.kt)("p",null,"This is the primary extension point for the connector. It contains all necessary interfaces that need to be implemented\nas well as essential model classes and enums. Basically, the ",(0,a.kt)("inlineCode",{parentName:"p"},"spi")," modules defines the extent to what users can\ncustomize and extend the code."),(0,a.kt)("h3",{id:"core"},(0,a.kt)("inlineCode",{parentName:"h3"},"core")),(0,a.kt)("p",null,"Contains all absolutely essential building that is necessary to run a connector such as ",(0,a.kt)("inlineCode",{parentName:"p"},"TransferProcessManager"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"ProvisionManager"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"DataFlowManager"),", various model classes, the protocol engine and the policy piece. While it is\npossible to build a connector with just the code from the ",(0,a.kt)("inlineCode",{parentName:"p"},"core")," module, it will have very limited capabilities to\ncommunicate and to interact with a data space."),(0,a.kt)("h3",{id:"extensions"},(0,a.kt)("inlineCode",{parentName:"h3"},"extensions")),(0,a.kt)("p",null,"This contains code that extends the connector's core functionality with technology- or cloud-provider-specific code. For\nexample a transfer process store based on Azure CosmosDB, a secure vault based on Azure KeyVault, etc. This is where\ntechnology- and cloud-specific implementations should go."),(0,a.kt)("p",null,"If someone were to create a configuration service based on Postgres, then the implementation should go into\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"extensions/database/configuration-postgres")," module."),(0,a.kt)("h3",{id:"launchers"},(0,a.kt)("inlineCode",{parentName:"h3"},"launchers")),(0,a.kt)("p",null,"Launchers are essentially connector packages that are runnable. What modules get included in the build (and thus: what\ncapabilities a connector has) is defined by the ",(0,a.kt)("inlineCode",{parentName:"p"},"build.gradle.kts")," file inside the launcher subdirectory. That's also\nwhere a Java class containing a ",(0,a.kt)("inlineCode",{parentName:"p"},"main"),' method should go. We will call that class a "runtime" and in order for the\nconnector to become operational the ',(0,a.kt)("inlineCode",{parentName:"p"},"runtime"),' needs to perform several important tasks (="bootstrapping"). For an\nexample take a look at\n',(0,a.kt)("a",{parentName:"p",href:"https://github.com/eclipse-edc/Samples/blob/main/other/custom-runtime/src/main/java/org/eclipse/edc/sample/runtime/CustomRuntime.java"},"this runtime")),(0,a.kt)("h3",{id:"resourcescharts"},(0,a.kt)("inlineCode",{parentName:"h3"},"resources/charts")),(0,a.kt)("p",null,"Contains a Helm chart for the EDC runtime. You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"launchers/generic/Dockerfile")," to build a runtime image for\nyour connector runtime, and deploy the resulting image to Kubernetes."),(0,a.kt)("h3",{id:"data-protocols"},(0,a.kt)("inlineCode",{parentName:"h3"},"data-protocols")),(0,a.kt)("p",null,"Contains implementations for communication protocols a connector might use, such as IDS."),(0,a.kt)("h2",{id:"releases"},"Releases"),(0,a.kt)("p",null,"GitHub releases are listed ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/eclipse-edc/Connector/releases"},"here"),".\nPlease find more information about releases in our ",(0,a.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/docs/developer/releases"},"release approach"),"."),(0,a.kt)("h3",{id:"roadmap"},"Roadmap"),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/CONTRIBUTING#project-and-milestone-planning"},"here")," for more information about project and\nmilestone planning. Scheduled and ongoing milestones are listed\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/eclipse-edc/Connector/milestones"},"here"),"."),(0,a.kt)("h3",{id:"tags"},"Tags"),(0,a.kt)("p",null,"Available tags can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/eclipse-edc/Connector/tags"},"here"),"."),(0,a.kt)("h2",{id:"contributing"},"Contributing"),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/CONTRIBUTING"},"how to contribute"),"."))}p.isMDXComponent=!0}}]);