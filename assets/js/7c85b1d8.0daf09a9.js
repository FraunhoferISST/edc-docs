"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[9694],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(n),f=r,h=u["".concat(c,".").concat(f)]||u[f]||p[f]||a;return n?o.createElement(h,i(i({ref:t},d),{},{components:n})):o.createElement(h,i({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5003:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const a={},i="IDS API Configuration",s={unversionedId:"submodule/Connector/data-protocols/ids/ids-api-configuration/README",id:"submodule/Connector/data-protocols/ids/ids-api-configuration/README",title:"IDS API Configuration",description:"This module provides a custom Jetty context for endpoints of the IDS API, thus allowing for custom",source:"@site/docs/submodule/Connector/data-protocols/ids/ids-api-configuration/README.md",sourceDirName:"submodule/Connector/data-protocols/ids/ids-api-configuration",slug:"/submodule/Connector/data-protocols/ids/ids-api-configuration/",permalink:"/edc-docs/docs/submodule/Connector/data-protocols/ids/ids-api-configuration/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/data-protocols/ids/ids-api-configuration/README.md",tags:[],version:"current",frontMatter:{}},c={},l=[{value:"Background",id:"background",level:2},{value:"Scope",id:"scope",level:3},{value:"Technical Details",id:"technical-details",level:2},{value:"Interfaces",id:"interfaces",level:3},{value:"Dependencies",id:"dependencies",level:3},{value:"Configurations",id:"configurations",level:3},{value:"Decisions",id:"decisions",level:2}],d={toc:l};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"ids-api-configuration"},"IDS API Configuration"),(0,r.kt)("p",null,"This module provides a custom Jetty context for endpoints of the IDS API, thus allowing for custom\nconfiguration of these endpoints. It creates and provides an\n",(0,r.kt)("a",{target:"_blank",href:n(7306).Z},"IdsApiConfiguration"),",\nwhich holds the context alias as well as the API path. This configuration can be used by other\nextensions to register controllers in the IDS API context."),(0,r.kt)("h2",{id:"background"},"Background"),(0,r.kt)("p",null,"In the IDS API context, no authentication filters should be registered, as verification of the\nrequesting party is done using ",(0,r.kt)("inlineCode",{parentName:"p"},"Dynamic Attribute Tokens"),". Also, there should be no exception mappers\nregistered for this context, since ",(0,r.kt)("inlineCode",{parentName:"p"},"RejectionMessages")," with corresponding rejection reasons should\nbe returned in case of an exception. Therefore, it is necessary to separate IDS API endpoints from\nall other API endpoints."),(0,r.kt)("h3",{id:"scope"},"Scope"),(0,r.kt)("p",null,"This extension should be part of any connector that supports IDS messaging."),(0,r.kt)("h2",{id:"technical-details"},"Technical Details"),(0,r.kt)("h3",{id:"interfaces"},"Interfaces"),(0,r.kt)("p",null,"The extension adds an\n",(0,r.kt)("a",{target:"_blank",href:n(7306).Z},"IdsApiConfiguration"),"\ninstance to the ",(0,r.kt)("inlineCode",{parentName:"p"},"ServiceExtensionContext"),", which can be used to get information about the IDS API\nconfiguration."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Interface"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameters"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"IdsApiConfiguration.getContextAlias()"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"returns the alias under which the IDS API context is registered")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"IdsApiConfiguration.getPath()"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"returns the path at which endpoints of the IDS API are available")))),(0,r.kt)("h3",{id:"dependencies"},"Dependencies"),(0,r.kt)("p",null,"This module does not have any dependencies besides the ",(0,r.kt)("inlineCode",{parentName:"p"},"spi")," module."),(0,r.kt)("h3",{id:"configurations"},"Configurations"),(0,r.kt)("p",null,"In order to customize the IDS API context, provide the following configuration values and adjust\n",(0,r.kt)("inlineCode",{parentName:"p"},"web.http.ids.port")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"web.http.ids.path"),". Note, that the path and port for the default context\nhave to be set explicitly as soon as a custom context is specified."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties"},"web.http.port=8181\nweb.http.path=/api\nweb.http.ids.port=8282\nweb.http.ids.path=/api/v1/ids\n")),(0,r.kt)("p",null,"If no configuration is provided for the IDS API context, the port will default to ",(0,r.kt)("inlineCode",{parentName:"p"},"8282")," and the path will\ndefault to ",(0,r.kt)("inlineCode",{parentName:"p"},"/api/v1/ids"),"."),(0,r.kt)("h2",{id:"decisions"},"Decisions"),(0,r.kt)("p",null,"As opposed to other API contexts, the IDS API context is always created, even if no corresponding\nconfiguration is supplied. This is due to the reasons described in ",(0,r.kt)("a",{parentName:"p",href:"#background"},"Background"),"."))}p.isMDXComponent=!0},7306:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/files/IdsApiConfiguration-4ca159c6e327d9e4156a2c3bd01ac25e.java"}}]);