"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[156],{3905:(e,t,i)=>{i.d(t,{Zo:()=>d,kt:()=>m});var a=i(67294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function n(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?n(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):n(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,a,r=function(e,t){if(null==e)return{};var i,a,r={},n=Object.keys(e);for(a=0;a<n.length;a++)i=n[a],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)i=n[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var i=e.components,r=e.mdxType,n=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=c(i),m=r,b=u["".concat(s,".").concat(m)]||u[m]||p[m]||n;return i?a.createElement(b,l(l({ref:t},d),{},{components:i})):a.createElement(b,l({ref:t},d))}));function m(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=i.length,l=new Array(n);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<n;c++)l[c]=i[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,i)}u.displayName="MDXCreateElement"},81110:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var a=i(87462),r=(i(67294),i(3905));const n={},l="Deployment of Verifiable Credentials",o={unversionedId:"submodule/MinimumViableDataspace/docs/developer/decision-records/2022-08-04-verifiable-credentials/README",id:"submodule/MinimumViableDataspace/docs/developer/decision-records/2022-08-04-verifiable-credentials/README",title:"Deployment of Verifiable Credentials",description:"Decision",source:"@site/docs/submodule/MinimumViableDataspace/docs/developer/decision-records/2022-08-04-verifiable-credentials/README.md",sourceDirName:"submodule/MinimumViableDataspace/docs/developer/decision-records/2022-08-04-verifiable-credentials",slug:"/submodule/MinimumViableDataspace/docs/developer/decision-records/2022-08-04-verifiable-credentials/",permalink:"/edc-docs/docs/submodule/MinimumViableDataspace/docs/developer/decision-records/2022-08-04-verifiable-credentials/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/MinimumViableDataspace/docs/developer/decision-records/2022-08-04-verifiable-credentials/README.md",tags:[],version:"current",frontMatter:{}},s={},c=[{value:"Decision",id:"decision",level:2},{value:"Signing authorities",id:"signing-authorities",level:3},{value:"GAIA-X Verifiable Credentials",id:"gaia-x-verifiable-credentials",level:3},{value:"Dataspace Membership Verifiable Credential",id:"dataspace-membership-verifiable-credential",level:3},{value:"GAIA-X Private key",id:"gaia-x-private-key",level:3},{value:"Rationale",id:"rationale",level:2}],d={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deployment-of-verifiable-credentials"},"Deployment of Verifiable Credentials"),(0,r.kt)("h2",{id:"decision"},"Decision"),(0,r.kt)("h3",{id:"signing-authorities"},"Signing authorities"),(0,r.kt)("p",null,"Two authorities issuing Verifiable Credentials are established in MVD:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A GAIA-X authority"),(0,r.kt)("li",{parentName:"ul"},"A Dataspace authority")),(0,r.kt)("p",null,"For simplicity, both authorities are deployed in a single job in each MVD deployment."),(0,r.kt)("p",null,"Each authority has:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A private key in ECDSA P-256 format, generated by the deployment workflow."),(0,r.kt)("li",{parentName:"ul"},"A DID Document published to a public blob endpoint by the deployment workflow. The DID Document contains the public key corresponding to the private key.")),(0,r.kt)("h3",{id:"gaia-x-verifiable-credentials"},"GAIA-X Verifiable Credentials"),(0,r.kt)("p",null,"As part of deployment, the workflow generates the following verifiable credentials for each deployed participant. It signs them with the GAIA-X authority private key, and publishes them to the participant's Identity Hub."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A GAIA-X membership credential with the payload ",(0,r.kt)("inlineCode",{parentName:"li"},'{"gaiaXMember": "true"}'),"."),(0,r.kt)("li",{parentName:"ul"},"A region credential with the payload ",(0,r.kt)("inlineCode",{parentName:"li"},'{"region": "<region>"}'),", where ",(0,r.kt)("inlineCode",{parentName:"li"},"<region>")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"eu")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"us")," depending on the participant.")),(0,r.kt)("p",null,"The verifiable credentials can be used:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"By the Registration Service, to apply dataspace enrollment policies."),(0,r.kt)("li",{parentName:"ul"},"By each participant, to apply EDC policies.")),(0,r.kt)("h3",{id:"dataspace-membership-verifiable-credential"},"Dataspace Membership Verifiable Credential"),(0,r.kt)("p",null,"As part of dataspace onboarding, the Registration Service generates the following verifiable credential for a successfully onboarded participant. It signs it with the Dataspace authority private key, and publishes it to the participant's Identity Hub."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A dataspace membership credential with the payload ",(0,r.kt)("inlineCode",{parentName:"li"},'{"memberOfDataspace": "<did>"}'),", where ",(0,r.kt)("inlineCode",{parentName:"li"},"<did>")," is the did:web dataspace identifier.")),(0,r.kt)("h3",{id:"gaia-x-private-key"},"GAIA-X Private key"),(0,r.kt)("p",null,"The GAIA-X authority private key is available to repository committers as a downloadable artifact in the GitHub workflow run. This is done for presentation/development purposes."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Private Key artifact",src:i(54723).Z,width:"1358",height:"416"})),(0,r.kt)("p",null,"This allows users who extend MVD with additional policies to publish additional verifiable credentials into their deployments, using the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/eclipse-dataspaceconnector/IdentityHub/tree/main/client-cli"},"Identity Hub CLI"),"."),(0,r.kt)("h2",{id:"rationale"},"Rationale"),(0,r.kt)("p",null,"This structure illustrates the components involved in onboarding participants in dataspaces in the context of GAIA-X."),(0,r.kt)("p",null,"In a future iteration, the publicly available test GAIA-X server could be used to generate Verifiable Credentials."))}p.isMDXComponent=!0},54723:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/key-artifact-001e2d99c9c695dcb0f82db172c7839c.png"}}]);