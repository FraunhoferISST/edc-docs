"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[9121],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},s=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),s=p(n),m=r,y=s["".concat(l,".").concat(m)]||s[m]||u[m]||a;return n?o.createElement(y,i(i({ref:t},d),{},{components:n})):o.createElement(y,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=s;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}s.displayName="MDXCreateElement"},7282:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const a={},i="Identity Hub",c={unversionedId:"Components/IdentityHub/README",id:"Components/IdentityHub/README",title:"Identity Hub",description:"Temporary repository to get started with the Identity Hub for the MVD.",source:"@site/docs/Components/IdentityHub/README.md",sourceDirName:"Components/IdentityHub",slug:"/Components/IdentityHub/",permalink:"/edc-docs/docs/Components/IdentityHub/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/Components/IdentityHub/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Registration Service",permalink:"/edc-docs/docs/Components/Registration Service"},next:{title:"Changelog",permalink:"/edc-docs/docs/Components/IdentityHub/CHANGELOG"}},l={},p=[{value:"Documentation",id:"documentation",level:2},{value:"Run and develop identity Hub locally",id:"run-and-develop-identity-hub-locally",level:2},{value:"Publish DataspaceConnector artifact",id:"publish-dataspaceconnector-artifact",level:3},{value:"Generate open api and client",id:"generate-open-api-and-client",level:3},{value:"Contributing",id:"contributing",level:2}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"identity-hub"},"Identity Hub"),(0,r.kt)("p",null,"Temporary repository to get started with the Identity Hub for the MVD."),(0,r.kt)("h2",{id:"documentation"},"Documentation"),(0,r.kt)("p",null,"Developer documentation can be found under ",(0,r.kt)("a",{parentName:"p",href:"/edc-docs/docs/Components/IdentityHub/docs/developer/"},"docs/developer"),", where the main concepts "),(0,r.kt)("h2",{id:"run-and-develop-identity-hub-locally"},"Run and develop identity Hub locally"),(0,r.kt)("p",null,"In order to be able to develop and run this project, you need to follow the instructions below:"),(0,r.kt)("h3",{id:"publish-dataspaceconnector-artifact"},"Publish DataspaceConnector artifact"),(0,r.kt)("p",null,"IdentityHub import dependencies from the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/eclipse-dataspaceconnector/DataSpaceConnector"},"eclipse DataSpaceConnector")," project.\nYou need to clone the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/eclipse-dataspaceconnector/DataSpaceConnector"},"eclipse DataSpaceConnector")," repository, and publish the DataSpaceConnector artifact locally:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd <DataSpaceConnector-root-folder>\n# Use the same commit as CD pipeline to make sure it is compatible with the EDC version. See ref field on [action.yml](.github/actions/gradle-setup/action.yml)\ngit checkout 5191d3e6dd9ac5d78264d05ae69edb4d297b606a\n./gradlew publishToMavenLocal -Pskip.signing\n")),(0,r.kt)("h3",{id:"generate-open-api-and-client"},"Generate open api and client"),(0,r.kt)("p",null,"When developing locally, in order to avoid having errors in your IDE, you need to follow the ",(0,r.kt)("a",{parentName:"p",href:"/edc-docs/docs/Components/IdentityHub/docs/developer/openapi"},"open api instructions")," to generate the OpenAPI ",(0,r.kt)("inlineCode",{parentName:"p"},"yaml")," file and generate a REST client.\nIf you change the contract of an endpoint or add a new one, you will need to re-generate the OpenApi ",(0,r.kt)("inlineCode",{parentName:"p"},"yaml")," and the REST client."),(0,r.kt)("h2",{id:"contributing"},"Contributing"),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/eclipse-dataspaceconnector/DataSpaceConnector/blob/main/CONTRIBUTING.md"},"how to contribute")," for details."))}u.isMDXComponent=!0}}]);