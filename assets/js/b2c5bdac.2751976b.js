"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[5626],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),u=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(r),m=n,h=p["".concat(i,".").concat(m)]||p[m]||d[m]||o;return r?a.createElement(h,l(l({ref:t},c),{},{components:r})):a.createElement(h,l({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,l[1]=s;for(var u=2;u<o;u++)l[u]=r[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},67621:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=r(87462),n=(r(67294),r(3905));const o={},l="Data Flows Supported by the EDC",s={unversionedId:"submodule/Connector/docs/developer/architecture/data-transfer/README",id:"submodule/Connector/docs/developer/architecture/data-transfer/README",title:"Data Flows Supported by the EDC",description:"|   |PushProvider initiates the data flow|PullConsumer initiates the data flow|",source:"@site/docs/submodule/Connector/docs/developer/architecture/data-transfer/README.md",sourceDirName:"submodule/Connector/docs/developer/architecture/data-transfer",slug:"/submodule/Connector/docs/developer/architecture/data-transfer/",permalink:"/edc-docs/docs/submodule/Connector/docs/developer/architecture/data-transfer/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/docs/developer/architecture/data-transfer/README.md",tags:[],version:"current",frontMatter:{}},i={},u=[{value:"Preliminary IDS Messages",id:"preliminary-ids-messages",level:2},{value:"HTTP Push",id:"http-push",level:2},{value:"HTTP Pull",id:"http-pull",level:2},{value:"Stream Push",id:"stream-push",level:2},{value:"Stream Pull",id:"stream-pull",level:2},{value:"S3 Push",id:"s3-push",level:2},{value:"S3 Pull",id:"s3-pull",level:2},{value:"Open Issues:",id:"open-issues",level:2}],c={toc:u};function d(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"data-flows-supported-by-the-edc"},"Data Flows Supported by the EDC"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}),(0,n.kt)("th",{parentName:"tr",align:null},"Push",(0,n.kt)("br",null),"Provider initiates the data flow"),(0,n.kt)("th",{parentName:"tr",align:null},"Pull",(0,n.kt)("br",null),"Consumer initiates the data flow"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"HTTP/REST"),(0,n.kt)("td",{parentName:"tr",align:null},"API on Consumer side"),(0,n.kt)("td",{parentName:"tr",align:null},"API on provider side")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Stream"),(0,n.kt)("td",{parentName:"tr",align:null},"Provider streams data to messaging Destination on consumer side"),(0,n.kt)("td",{parentName:"tr",align:null},"Consumer connects to a Destination on provider side")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"S3"),(0,n.kt)("td",{parentName:"tr",align:null},"Provider pushes data to destination bucket on consumer side"),(0,n.kt)("td",{parentName:"tr",align:null},"Consumer pulls data from a bucket on provider side")))),(0,n.kt)("h2",{id:"preliminary-ids-messages"},"Preliminary IDS Messages"),(0,n.kt)("p",null,"In case IDS is used as protocol, supported data flow types can be part of the data and contract offers:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"UML Sequence Diagram",src:r(22618).Z,width:"514",height:"225"})),(0,n.kt)("p",null,"Description:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Provider lists supported protocols and flows (e.g., HTTP push) as part of the initial contract offer. TBD which IDS message property can be used.")),(0,n.kt)("p",null,"Subsequently, a contract negotiation (not depicted here) is performed."),(0,n.kt)("h2",{id:"http-push"},"HTTP Push"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"UML Sequence Diagram",src:r(43982).Z,width:"1321",height:"1001"})),(0,n.kt)("p",null,"Description:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The DataFlowAgent fetches data from a data source, which can either be a storage (e.g., database) or a service (e.g. an app performing transformations)."),(0,n.kt)("li",{parentName:"ul"},"The DataFlowAgent is not responsible for data transformation (e.g., anonymization). Instead, a data service performing this task and acting as proxy should be assigned this task."),(0,n.kt)("li",{parentName:"ul"},"The consumer creates an auth token (maybe just valid for a limited time range) that gets passed to the provider and can be used to identify the contract. An alternative can be to use a DAT token + a contract reference in every call."),(0,n.kt)("li",{parentName:"ul"},"The consumer stores the contract id (or copy of contract) next to the data."),(0,n.kt)("li",{parentName:"ul"},"The consumer connector provides an API to lookup contracts."),(0,n.kt)("li",{parentName:"ul"},"The HTTPService either creates a separate endpoint for each transaction, or uses the same endpoint each time and assures an isolated storage of the received assets.")),(0,n.kt)("h2",{id:"http-pull"},"HTTP Pull"),(0,n.kt)("p",null,"TBD"),(0,n.kt)("h2",{id:"stream-push"},"Stream Push"),(0,n.kt)("p",null,"TBD"),(0,n.kt)("h2",{id:"stream-pull"},"Stream Pull"),(0,n.kt)("p",null,"TBD"),(0,n.kt)("h2",{id:"s3-push"},"S3 Push"),(0,n.kt)("p",null,"TBD"),(0,n.kt)("h2",{id:"s3-pull"},"S3 Pull"),(0,n.kt)("p",null,"TBD"),(0,n.kt)("h2",{id:"open-issues"},"Open Issues:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Info Model need to be extended to support specifying/distinguishing between existing asset and subscriptions (incl. time frame and frequency)")))}d.isMDXComponent=!0},43982:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/data-flow-http-push-b51931568ec650b62954bc31b1cea02c.png"},22618:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/description-request-flow-66ac13e8eb3c32050d63ede8eedab7c4.png"}}]);