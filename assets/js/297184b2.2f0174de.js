"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[2961],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},76655:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=n(87462),o=(n(67294),n(3905));const a={},i="IDS Standard",s={unversionedId:"submodule/Connector/docs/developer/architecture/ids/README",id:"submodule/Connector/docs/developer/architecture/ids/README",title:"IDS Standard",description:"See implementation details here.",source:"@site/docs/submodule/Connector/docs/developer/architecture/ids/README.md",sourceDirName:"submodule/Connector/docs/developer/architecture/ids",slug:"/submodule/Connector/docs/developer/architecture/ids/",permalink:"/edc-docs/docs/submodule/Connector/docs/developer/architecture/ids/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/docs/developer/architecture/ids/README.md",tags:[],version:"current",frontMatter:{}},l={},d=[{value:"Specification",id:"specification",level:2},{value:"Compliance Issues",id:"compliance-issues",level:3},{value:"1. No Self-Description Response at API Root",id:"1-no-self-description-response-at-api-root",level:5},{value:"2. Only one Information Model version supported at a time",id:"2-only-one-information-model-version-supported-at-a-time",level:4},{value:"Key Components",id:"key-components",level:2},{value:"Modules",id:"modules",level:3},{value:"Controller",id:"controller",level:3},{value:"Message Handler",id:"message-handler",level:3},{value:"Sub Handler",id:"sub-handler",level:4},{value:"Transformers",id:"transformers",level:3}],c={toc:d};function p(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ids-standard"},"IDS Standard"),(0,o.kt)("p",null,"See implementation details ",(0,o.kt)("a",{parentName:"p",href:"../../../../data-protocols/ids/"},"here"),"."),(0,o.kt)("h2",{id:"specification"},"Specification"),(0,o.kt)("h3",{id:"compliance-issues"},"Compliance Issues"),(0,o.kt)("p",null,"The EDC will ",(0,o.kt)("strong",{parentName:"p"},"not")," be IDS compliant in every way. This section contains a list of issues, where the non-compliance is\na conscious decision."),(0,o.kt)("h5",{id:"1-no-self-description-response-at-api-root"},"1. No Self-Description Response at API Root"),(0,o.kt)("p",null,"At the root path of the API IDS requires the connector to return a self-description. This is a requirement the connector\nwill never fulfil. The self-description is only returned on the corresponding REST or Multipart requests."),(0,o.kt)("h4",{id:"2-only-one-information-model-version-supported-at-a-time"},"2. Only one Information Model version supported at a time"),(0,o.kt)("p",null,"The EDC connector will not be able to support more than one IDS Information model per running instance."),(0,o.kt)("h2",{id:"key-components"},"Key Components"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Dispatch Architecture",src:n(81424).Z,width:"2386",height:"1491"})),(0,o.kt)("h3",{id:"modules"},"Modules"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"ids-api-","[x]","-endpoint-v","[x]"," modules marshall requests and responses between the EDC and a transport. They are tied to a specific infomodel version."),(0,o.kt)("li",{parentName:"ul"},"ids-transform-v","[x]"," modules contain transformers. They are tied to a specific infomodel version. EDC model to IDS infomodel and vice versa."),(0,o.kt)("li",{parentName:"ul"},"Two different endpoint modules may use the same transformers if they share a common infomodel.")),(0,o.kt)("h3",{id:"controller"},"Controller"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"MultipartController")," reads messages from a transport and dispatches to a Message Handler based on ",(0,o.kt)("inlineCode",{parentName:"li"},"RequestMessage")," type."),(0,o.kt)("li",{parentName:"ul"},"Performs basic validation and may return an error response")),(0,o.kt)("h3",{id:"message-handler"},"Message Handler"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"MultipartRequestHandler")," processes a ",(0,o.kt)("inlineCode",{parentName:"li"},"RequestMessage")," type (subclass)."),(0,o.kt)("li",{parentName:"ul"},"Performs validation and may return an error response")),(0,o.kt)("h4",{id:"sub-handler"},"Sub Handler"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"DescriptionRequestHandler")," processes a ",(0,o.kt)("inlineCode",{parentName:"li"},"DescriptionRequestMessage")," by delegating to a ",(0,o.kt)("em",{parentName:"li"},(0,o.kt)("strong",{parentName:"em"},"Sub Handler")),"."),(0,o.kt)("li",{parentName:"ul"},"This handler directly maintains a map of Sub Handlers keyed by the scheme-specific part of the ",(0,o.kt)("inlineCode",{parentName:"li"},"requestedElement")," field."),(0,o.kt)("li",{parentName:"ul"},"The Connector Description Sub Handler is dispatched to as the default handler. This Sub Handler will use the ",(0,o.kt)("inlineCode",{parentName:"li"},"ConnectorDescriptorService"),".")),(0,o.kt)("h3",{id:"transformers"},"Transformers"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("inlineCode",{parentName:"li"},"TransformerRegistery")," dispatches to ",(0,o.kt)("inlineCode",{parentName:"li"},"Transformers")," to map between IDS and EDC types. Handlers/Sub Handlers should use these to marshal\nrequests and responses to and from the EDC core."),(0,o.kt)("li",{parentName:"ul"},"Type mapping should preferably be done in the handlers, not services (we need to look at this further, e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"ConnectorDescriptionService"),").")))}p.isMDXComponent=!0},81424:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/dispatch.architecture-51364b27f59f6225f2e130d3a0647f5b.jpg"}}]);