"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[1266],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>p});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=c(n),p=a,f=m["".concat(l,".").concat(p)]||m[p]||u[p]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},77411:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={},i=void 0,s={unversionedId:"submodule/FederatedCatalog/system-tests/end2end-test/README",id:"submodule/FederatedCatalog/system-tests/end2end-test/README",title:"README",description:"This module contains a true End-to-End test, where a standalone FCC runtime communicates with an EDC connector runtime",source:"@site/docs/submodule/FederatedCatalog/system-tests/end2end-test/README.md",sourceDirName:"submodule/FederatedCatalog/system-tests/end2end-test",slug:"/submodule/FederatedCatalog/system-tests/end2end-test/",permalink:"/edc-docs/docs/submodule/FederatedCatalog/system-tests/end2end-test/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/FederatedCatalog/system-tests/end2end-test/README.md",tags:[],version:"current",frontMatter:{}},l={},c=[{value:"Directory structure",id:"directory-structure",level:2},{value:"Test execution",id:"test-execution",level:2}],d={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This module contains a true End-to-End test, where a standalone FCC runtime communicates with an EDC connector runtime\nand builds its internal catalog cache. Please note that due to the increased demands in overall test run-time and setup\ncomplexity, it is advisable to limit the number of tests that are executed in this fashion."),(0,a.kt)("p",null,"Furthermore, the tests in this module are intended to be run on a CI pipeline or some other build environment, and while\nit is possible to run them in local dev environments, be aware of the more involved test setup process."),(0,a.kt)("h2",{id:"directory-structure"},"Directory structure"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"catalog-runtime"),": contains some glue code, such as a file-based ",(0,a.kt)("inlineCode",{parentName:"li"},"FederatedCacheNodeDirectory")," implementation for\ntesting, a build file and a ",(0,a.kt)("inlineCode",{parentName:"li"},"Dockerfile")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"connector-runtime"),": contains a build file and ",(0,a.kt)("inlineCode",{parentName:"li"},"Dockerfile")," for a very basic EDC connector runtime"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"e2e-junit-runner"),": contains the actual JUnit test cases"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"resources"),": contains runtime artifacts that the docker containers use. This directory will be mapped as volume into\nthe catalog runtime service.")),(0,a.kt)("h2",{id:"test-execution"},"Test execution"),(0,a.kt)("p",null,"Please follow these steps in order to run the tests on a local dev environment."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Build launchers: there are two submodules named ",(0,a.kt)("inlineCode",{parentName:"p"},"catalog-runtime")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"connector-runtimes"),", which will produce\nexecutable JAR files that\nwill later be used in docker containers. In order to build them, simply execute"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"./gradlew :system-tests:end2end-test:catalog-runtime:shadowJar\n./gradlew :system-tests:end2end-test:conenctor-runtime:shadowJar\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose"),": from you project root directory execute the following command to bring up the test backend"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose -f system-tests/end2end-test/docker-compose.yml up --build\n")),(0,a.kt)("p",{parentName:"li"},"this will keep the logs of all the containers in the foreground. If this is undesired, consider using either\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"-d")," (background) or ",(0,a.kt)("inlineCode",{parentName:"p"},"--wait")," flags.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Execute tests by entering the following command on a shell"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'./gradlew system-tests:end2end-test:e2e-junit:test -DincludeTags="EndToEndTest"\n')))))}u.isMDXComponent=!0}}]);