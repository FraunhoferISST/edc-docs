"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[6365],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(n),u=a,f=d["".concat(c,".").concat(u)]||d[u]||m[u]||r;return n?o.createElement(f,l(l({ref:t},p),{},{components:n})):o.createElement(f,l({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<r;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1773:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var o=n(87462),a=(n(67294),n(3905));const r={},l="SQL Pool Apache Commons Pool",i={unversionedId:"submodule/Connector/extensions/common/sql/sql-pool/sql-pool-apache-commons/README",id:"submodule/Connector/extensions/common/sql/sql-pool/sql-pool-apache-commons/README",title:"SQL Pool Apache Commons Pool",description:"This extension registers named javax.sql.DataSources to",source:"@site/docs/submodule/Connector/extensions/common/sql/sql-pool/sql-pool-apache-commons/README.md",sourceDirName:"submodule/Connector/extensions/common/sql/sql-pool/sql-pool-apache-commons",slug:"/submodule/Connector/extensions/common/sql/sql-pool/sql-pool-apache-commons/",permalink:"/edc-docs/docs/submodule/Connector/extensions/common/sql/sql-pool/sql-pool-apache-commons/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/extensions/common/sql/sql-pool/sql-pool-apache-commons/README.md",tags:[],version:"current",frontMatter:{}},c={},s=[{value:"Configuration",id:"configuration",level:2}],p={toc:s};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sql-pool-apache-commons-pool"},"SQL Pool Apache Commons Pool"),(0,a.kt)("p",null,"This extension registers named ",(0,a.kt)("inlineCode",{parentName:"p"},"javax.sql.DataSource"),"s to\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"org.eclipse.edc.transaction.datasource.spi.DataSourceRegistry"),"\ncapable of pooling ",(0,a.kt)("inlineCode",{parentName:"p"},"java.sql.Connection"),"s. The pooling mechanism is backed by\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://commons.apache.org/proper/commons-pool/"},"Apache Commons Pool library"),"."),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Mandatory"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"edc.datasource.<datasource_name>.url"),(0,a.kt)("td",{parentName:"tr",align:"left"},"JDBC driver url"),(0,a.kt)("td",{parentName:"tr",align:null},"X")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"edc.datasource.<datasource_name>.pool.maxIdleConnections"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The maximum amount of idling connections maintained by the pool"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"edc.datasource.<datasource_name>.pool.maxTotalConnections"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The maximum amount of total connections maintained by the pool"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"edc.datasource.<datasource_name>.pool.minIdleConnections"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The minimum amount of idling connections maintained by the pool"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"edc.datasource.<datasource_name>.pool.testConnectionOnBorrow"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Flag to define whether connections will be validated when a connection has been obtained from the pool"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"edc.datasource.<datasource_name>.pool.testConnectionOnCreate"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Flag to define whether connections will be validated when a connection has been established"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"edc.datasource.<datasource_name>.pool.testConnectionOnReturn"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Flag to define whether connections will be validated when a connection has been returned to the pool"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"edc.datasource.<datasource_name>.pool.testConnectionWhileIdle"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Flag to define whether idling connections will be validated"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"edc.datasource.<datasource_name>.pool.testQuery"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Test query to validate a connection maintained by the pool"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"edc.datasource.<datasource_name>.<jdbc_properties>"),(0,a.kt)("td",{parentName:"tr",align:"left"},"JDBC driver specific configuration properties"),(0,a.kt)("td",{parentName:"tr",align:null})))))}m.isMDXComponent=!0}}]);