"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[214],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(h,a(a({ref:t},p),{},{components:n})):r.createElement(h,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},28773:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const i={},a="Versioning concept for MVD",l={unversionedId:"submodule/Connector/docs/developer/decision-records/2022-08-11-versioning_and_artifacts/README",id:"submodule/Connector/docs/developer/decision-records/2022-08-11-versioning_and_artifacts/README",title:"Versioning concept for MVD",description:"Decision",source:"@site/docs/submodule/Connector/docs/developer/decision-records/2022-08-11-versioning_and_artifacts/README.md",sourceDirName:"submodule/Connector/docs/developer/decision-records/2022-08-11-versioning_and_artifacts",slug:"/submodule/Connector/docs/developer/decision-records/2022-08-11-versioning_and_artifacts/",permalink:"/edc-docs/docs/submodule/Connector/docs/developer/decision-records/2022-08-11-versioning_and_artifacts/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/docs/developer/decision-records/2022-08-11-versioning_and_artifacts/README.md",tags:[],version:"current",frontMatter:{}},s={},c=[{value:"Decision",id:"decision",level:2},{value:"Rationale",id:"rationale",level:2},{value:"General rules",id:"general-rules",level:2},{value:"Specific rules for &quot;our&quot; dependent projects",id:"specific-rules-for-our-dependent-projects",level:2},{value:"During development of &quot;our&quot; dependent projects",id:"during-development-of-our-dependent-projects",level:2}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"versioning-concept-for-mvd"},"Versioning concept for MVD"),(0,o.kt)("h2",{id:"decision"},"Decision"),(0,o.kt)("p",null,"We want to get rid of checking out other repositories during CI, building them locally and publishing them into the\nlocal Maven cache (",(0,o.kt)("inlineCode",{parentName:"p"},"publishToMavenLocal"),")."),(0,o.kt)("h2",{id:"rationale"},"Rationale"),(0,o.kt)("p",null,"When building and/or running projects that use EDC (such as MVD) it is quite cumbersome and error-prone to check out a\nparticular git ref in different projects and to build and publish them locally."),(0,o.kt)("p",null,"We will therefore move toward a system where we use distributed Maven artifacts rather than local ones. This is less\nflexible than git refs, but at the same time improves coherence and setup speed."),(0,o.kt)("h2",{id:"general-rules"},"General rules"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},'for the sake of brevity, the term "our" refers to all original implementation projects inside the\n',(0,o.kt)("inlineCode",{parentName:"p"},"eclipse-edc")," org in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/eclipse-edc/"},"Github"),". At the time of this\nwriting that includes ",(0,o.kt)("inlineCode",{parentName:"p"},"DataSpaceConnector"),' (a.k.a. "EDC"),\n',(0,o.kt)("inlineCode",{parentName:"p"},"RegistrationService"),' (a.k.a. "RS", ',(0,o.kt)("a",{parentName:"p",href:"https://github.com/eclipse-edc/RegistrationService"},"see Github"),"),\n",(0,o.kt)("inlineCode",{parentName:"p"},"IdentityHub"),' (a.k.a. "IH", ',(0,o.kt)("a",{parentName:"p",href:"https://github.com/eclipse-edc/IdentityHub"},"see Github"),",\n",(0,o.kt)("inlineCode",{parentName:"p"},"MinimumViableDataspace"),' (a.k.a. "MVD"\n, ',(0,o.kt)("a",{parentName:"p",href:"https://github.com/eclipse-edc/MinimumViableDataspace"},"see Github"),")) and ",(0,o.kt)("inlineCode",{parentName:"p"},"FederatedCatalog"),' (a.k.a.\n"FC", ',(0,o.kt)("a",{parentName:"p",href:"https://github.com/eclipse-edc/FederatedCatalog"},"see Github"),").")),(0,o.kt)("p",null,'All "our" projects must'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"use Maven artifacts from MavenCentral or OSSRH Snapshots, both for local and CI builds"),(0,o.kt)("li",{parentName:"ul"},"produce a new rolling ",(0,o.kt)("inlineCode",{parentName:"li"},"-SNAPSHOT")," version based on their respective ",(0,o.kt)("inlineCode",{parentName:"li"},"main")," branch every 30 minutes if there are\nchanges. ",(0,o.kt)("em",{parentName:"li"},"This is already in place.")),(0,o.kt)("li",{parentName:"ul"},"produce a nightly snapshot build containing the date in the metadata, in the format ",(0,o.kt)("inlineCode",{parentName:"li"},"X.Y.Z-YYYYMMDD-SNAPSHOT"),". ",(0,o.kt)("em",{parentName:"li"},"This\nis already in place."))),(0,o.kt)("h2",{id:"specific-rules-for-our-dependent-projects"},'Specific rules for "our" dependent projects'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"publishing a new release in a dependency should also trigger a release in dependent projects with the same version\nstring. E.g. building EDC -> triggers RS and IH."),(0,o.kt)("li",{parentName:"ul"},'all "our" dependent projects ',(0,o.kt)("strong",{parentName:"li"},"must")," maintain version consistency: for example when RS and IH both reference\nEDC ",(0,o.kt)("inlineCode",{parentName:"li"},"0.0.1-some-fix-SNAPSHOT"),", then MVD ",(0,o.kt)("strong",{parentName:"li"},"must")," reference that same version"),(0,o.kt)("li",{parentName:"ul"},'version bumps must happen across all "our" repos: when RS upgrades to EDC ',(0,o.kt)("inlineCode",{parentName:"li"},"0.0.1-milestone-69"),", then all other\nprojects ",(0,o.kt)("strong",{parentName:"li"},"must")," follow suit.")),(0,o.kt)("h2",{id:"during-development-of-our-dependent-projects"},'During development of "our" dependent projects'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"the ",(0,o.kt)("inlineCode",{parentName:"li"},"main"),' branches of "our" dependent projects must always reference releases or "named" snapshots of EDC'),(0,o.kt)("li",{parentName:"ul"},'in case a dependent project requires a change in EDC, they can temporarily use the rolling snapshot or nightly version\nof EDC including that fix, but EDC should release a "named" snapshot, e.g. ',(0,o.kt)("inlineCode",{parentName:"li"},"0.0.1-something-SNAPSHOT")," in a timely\nmanner. From that time forward, that project will use ",(0,o.kt)("inlineCode",{parentName:"li"},"0.0.1-something-SNAPSHOT")," on its ",(0,o.kt)("inlineCode",{parentName:"li"},"main")," branch."),(0,o.kt)("li",{parentName:"ul"},"before merging the PR in the dependent project, there ",(0,o.kt)("strong",{parentName:"li"},"must")," be a named snapshot or release of EDC, which the\ndependent project references henceforth.")))}d.isMDXComponent=!0}}]);