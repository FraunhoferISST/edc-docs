"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[5850],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},78761:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={},l="Http Dynamic EDR receiver",i={unversionedId:"submodule/Connector/extensions/control-plane/transfer/transfer-pull-http-dynamic-receiver/README",id:"submodule/Connector/extensions/control-plane/transfer/transfer-pull-http-dynamic-receiver/README",title:"Http Dynamic EDR receiver",description:"This extension is similar to the HTTP EDR receiver. The difference is that the URL is not configured",source:"@site/docs/submodule/Connector/extensions/control-plane/transfer/transfer-pull-http-dynamic-receiver/README.md",sourceDirName:"submodule/Connector/extensions/control-plane/transfer/transfer-pull-http-dynamic-receiver",slug:"/submodule/Connector/extensions/control-plane/transfer/transfer-pull-http-dynamic-receiver/",permalink:"/edc-docs/docs/submodule/Connector/extensions/control-plane/transfer/transfer-pull-http-dynamic-receiver/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/extensions/control-plane/transfer/transfer-pull-http-dynamic-receiver/README.md",tags:[],version:"current",frontMatter:{}},c={},s=[{value:"Configuration",id:"configuration",level:2}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"http-dynamic-edr-receiver"},"Http Dynamic EDR receiver"),(0,a.kt)("p",null,"This extension is similar to the ",(0,a.kt)("a",{parentName:"p",href:"../transfer-pull-http-receiver"},"HTTP EDR receiver"),". The difference is that the URL is not configured\nat startup time, but instead the callback url is provided to the consumer connector when initiating a transfer request\nby passing a custom property in the transfer request payload e.g. The URL will be stored in the transfer process\nand will be used by the consumer connector to dispatch the EDR"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "edctype": "dataspaceconnector:datarequest",\n  "protocol": "ids-multipart",\n  "assetId": "test-document",\n  "contractId": "1:8147d6d6-9734-4821-b93d-2832ea7892e4",\n  "dataDestination": {\n    "type": "HttpProxy"\n        \n  },\n  "transferType": {\n    "contentType": "application/octet-stream",\n    "isFinite": true\n  },\n  "managedResources": false,\n  "connectorAddress": "http://localhost:8282/api/v1/ids/data",\n  "connectorId": "consumer",\n  "properties": {\n    "receiver.http.endpoint" : "http://localhost:9999"\n  }\n}\n')),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,a.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"edc.receiver.http.dynamic.endpoint")),(0,a.kt)("td",{parentName:"tr",align:null},"The fallbacke endpoint when the URL is missing from the TP."),(0,a.kt)("td",{parentName:"tr",align:null},"false"),(0,a.kt)("td",{parentName:"tr",align:null},"null")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"edc.receiver.http.dynamic.auth-key")),(0,a.kt)("td",{parentName:"tr",align:null},"The header name that will be sent with the EDR request."),(0,a.kt)("td",{parentName:"tr",align:null},"false"),(0,a.kt)("td",{parentName:"tr",align:null},"null")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"edc.receiver.http.dynamic.auth-code")),(0,a.kt)("td",{parentName:"tr",align:null},"The header value that will be sent with the EDR request."),(0,a.kt)("td",{parentName:"tr",align:null},"false"),(0,a.kt)("td",{parentName:"tr",align:null},"null")))))}u.isMDXComponent=!0}}]);