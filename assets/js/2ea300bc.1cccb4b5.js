"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[611],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(r),f=o,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||a;return r?n.createElement(m,c(c({ref:t},u),{},{components:r})):n.createElement(m,c({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var l=2;l<a;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8361:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={},c="Architecture",s={unversionedId:"submodule/Connector/docs/developer/architecture/README",id:"submodule/Connector/docs/developer/architecture/README",title:"Architecture",description:"- Domain Model",source:"@site/docs/submodule/Connector/docs/developer/architecture/README.md",sourceDirName:"submodule/Connector/docs/developer/architecture",slug:"/submodule/Connector/docs/developer/architecture/",permalink:"/edc-docs/docs/submodule/Connector/docs/developer/architecture/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/docs/developer/architecture/README.md",tags:[],version:"current",frontMatter:{}},i={},l=[{value:"Configuration",id:"configuration",level:2},{value:"Data Transfer",id:"data-transfer",level:2},{value:"Contract",id:"contract",level:3},{value:"TransferProcessListener",id:"transferprocesslistener",level:3}],u={toc:l};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"architecture"},"Architecture"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/edc-docs/docs/submodule/Connector/docs/developer/architecture/domain-model"},"Domain Model")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/edc-docs/docs/submodule/Connector/docs/developer/architecture/coding-principles"},"Key Principles")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/edc-docs/docs/submodule/Connector/docs/developer/architecture/terminology"},"Terminology"))),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Each EDC extension may use its own configuration settings and should explain them in their corresponding README.md."),(0,o.kt)("p",null,"For a more detailed explanation of the configuration itself please see ",(0,o.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/docs/developer/architecture/configuration/"},"configuration.md"),"."),(0,o.kt)("h2",{id:"data-transfer"},"Data Transfer"),(0,o.kt)("h3",{id:"contract"},"Contract"),(0,o.kt)("p",null,"Before each data transfer a contract must be offered from the provider. A consumer must negotiate an offer successfully,\nbefore its able to request data."),(0,o.kt)("p",null,"These two processes (offering & negotation) are documented in the ",(0,o.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/docs/developer/architecture/usage-control/contracts"},"contracts.md")),(0,o.kt)("h3",{id:"transferprocesslistener"},"TransferProcessListener"),(0,o.kt)("p",null,"A consumer extension may register a listener to execute custom logic after a transfer changes state, for example, to notify an external application on the consumer side after data has been produced (i.e. the transfer moves to the completed state)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"transferProcessObservable = context.getService(TransferProcessObservable.class);\ntransferProcessObservable.registerListener(myTransferProcessListener);\n")),(0,o.kt)("p",null,"A sample is available at ",(0,o.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/samples/04.1-file-transfer-listener/"},"04.1-file-transfer-listener"),"."))}d.isMDXComponent=!0}}]);