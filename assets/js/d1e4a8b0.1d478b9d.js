"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[9263],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||i;return n?r.createElement(f,a(a({ref:t},d),{},{components:n})):r.createElement(f,a({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},77434:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const i={},a="Add filtering to IDS catalog requests",l={unversionedId:"submodule/Connector/docs/developer/decision-records/2022-09-18-ids-catalog-request-filtering/README",id:"submodule/Connector/docs/developer/decision-records/2022-09-18-ids-catalog-request-filtering/README",title:"Add filtering to IDS catalog requests",description:"Decision",source:"@site/docs/submodule/Connector/docs/developer/decision-records/2022-09-18-ids-catalog-request-filtering/README.md",sourceDirName:"submodule/Connector/docs/developer/decision-records/2022-09-18-ids-catalog-request-filtering",slug:"/submodule/Connector/docs/developer/decision-records/2022-09-18-ids-catalog-request-filtering/",permalink:"/edc-docs/docs/submodule/Connector/docs/developer/decision-records/2022-09-18-ids-catalog-request-filtering/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/docs/developer/decision-records/2022-09-18-ids-catalog-request-filtering/README.md",tags:[],version:"current",frontMatter:{}},s={},c=[{value:"Decision",id:"decision",level:2},{value:"Rationale",id:"rationale",level:2},{value:"Approach",id:"approach",level:2},{value:"Considerations and limitations",id:"considerations-and-limitations",level:2}],d={toc:c};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"add-filtering-to-ids-catalog-requests"},"Add filtering to IDS catalog requests"),(0,o.kt)("h2",{id:"decision"},"Decision"),(0,o.kt)("p",null,"Extend existing ",(0,o.kt)("inlineCode",{parentName:"p"},"CatalogRequest")," object with list of criteria used to filter ",(0,o.kt)("inlineCode",{parentName:"p"},"Assets")," within ",(0,o.kt)("inlineCode",{parentName:"p"},"Catalog")," response."),(0,o.kt)("h2",{id:"rationale"},"Rationale"),(0,o.kt)("p",null,"In a large scale environment, with multiple EDCs holding the information about hundreds of thousands of ",(0,o.kt)("inlineCode",{parentName:"p"},"Assets"),", instead of\nlooping thought all of the ",(0,o.kt)("inlineCode",{parentName:"p"},"ContractOffers"),", there is a need to narrow the results down to even single offer. For example, an\n",(0,o.kt)("inlineCode",{parentName:"p"},"Asset")," might hold the 'special' type of data (like registry or database) and should be searchable by its type."),(0,o.kt)("h2",{id:"approach"},"Approach"),(0,o.kt)("p",null,"As the logic for querying ",(0,o.kt)("inlineCode",{parentName:"p"},"AssetIndex")," by ",(0,o.kt)("inlineCode",{parentName:"p"},"QuerySpec")," is already in place, all we have to do is to pass filtering criteria via IDS Api:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"filter")," property has to be added to the IDS message:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// in MultiPartCatalogDescriptionRequestSender.java\nmessage.setProperty(CatalogRequest.FILTER, request.getFilter());\n")),(0,o.kt)("p",null,"Then, on the receiving end, it's simply extracted:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// in DescriptionRequestHandler.java \nvar querySpec = ofNullable(message.getProperties().get(CatalogRequest.FILTER))\n    .map(map -> objectMapper.convertValue(map, typeRef))\n    .orElse(/*should never occur!!*/)\n")),(0,o.kt)("p",null,"Existing ",(0,o.kt)("inlineCode",{parentName:"p"},"ContractOfferQuery")," will be used to transport both ",(0,o.kt)("inlineCode",{parentName:"p"},"Range")," and filtering criteria to lower layers."),(0,o.kt)("p",null,"And now, they can be applied to ",(0,o.kt)("inlineCode",{parentName:"p"},"AssetIndex")," search query when constructing the ",(0,o.kt)("inlineCode",{parentName:"p"},"Catalog")," response:"),(0,o.kt)("p",null,"1) pass Criterions to the ",(0,o.kt)("inlineCode",{parentName:"p"},"CatalogServiceImpl.getDataCatalog()"),"\n2) attach to the existing ",(0,o.kt)("inlineCode",{parentName:"p"},"ContractOfferQuery")," object\n3) in ",(0,o.kt)("inlineCode",{parentName:"p"},"ContractOfferServiceImpl.queryContractOffers()"),", merge with ",(0,o.kt)("inlineCode",{parentName:"p"},"AssetSelectorExpressions")," from contract definitions."),(0,o.kt)("h2",{id:"considerations-and-limitations"},"Considerations and limitations"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"there is no standardized query language nor will there be one for the foreseeable future;"),(0,o.kt)("li",{parentName:"ul"},'querying is based on the "Canonical format": (',(0,o.kt)("a",{parentName:"li",href:"https://github.com/eclipse-edc/Connector/blob/main/docs/developer/sql_queries.md"},"https://github.com/eclipse-edc/Connector/blob/main/docs/developer/sql_queries.md"),"),\ni.e. the schema of the queried objects, i.e. their Java class. That implies that the client must have knowledge of the schema; "),(0,o.kt)("li",{parentName:"ul"},"that schema is subject to change without special notice.")))}p.isMDXComponent=!0}}]);