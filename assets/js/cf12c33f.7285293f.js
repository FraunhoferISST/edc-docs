"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[4229],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),f=a,u=m["".concat(l,".").concat(f)]||m[f]||d[f]||s;return n?r.createElement(u,o(o({ref:t},c),{},{components:n})):r.createElement(u,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<s;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3752:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const s={},o="Implement a simple transfer listener",i={unversionedId:"submodule/Connector/samples/04.1-file-transfer-listener/README",id:"submodule/Connector/samples/04.1-file-transfer-listener/README",title:"Implement a simple transfer listener",description:"In this sample, we build upon the file transfer sample to add functionality to react to transfer completion on the consumer connector side.",source:"@site/docs/submodule/Connector/samples/04.1-file-transfer-listener/README.md",sourceDirName:"submodule/Connector/samples/04.1-file-transfer-listener",slug:"/submodule/Connector/samples/04.1-file-transfer-listener/",permalink:"/edc-docs/docs/submodule/Connector/samples/04.1-file-transfer-listener/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/samples/04.1-file-transfer-listener/README.md",tags:[],version:"current",frontMatter:{}},l={},p=[{value:"Create the listener",id:"create-the-listener",level:2},{value:"Perform a file transfer",id:"perform-a-file-transfer",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"implement-a-simple-transfer-listener"},"Implement a simple transfer listener"),(0,a.kt)("p",null,"In this sample, we build upon the ",(0,a.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/samples/04.0-file-transfer/"},"file transfer sample")," to add functionality to react to transfer completion on the consumer connector side."),(0,a.kt)("p",null,"We will use the provider from the ",(0,a.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/samples/04.0-file-transfer/"},"file transfer sample"),", and the consumer built on the consumer from that sample, with a transfer process listener added."),(0,a.kt)("p",null,"Also, in order to keep things organized, the code in this example has been separated into several Java modules:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"consumer"),": this is where the extension definition and dependencies reside for the consumer connector"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"listener"),": contains the ",(0,a.kt)("inlineCode",{parentName:"li"},"TransferProcessListener")," implementation")),(0,a.kt)("h2",{id:"create-the-listener"},"Create the listener"),(0,a.kt)("p",null,"A TransferProcessListener may define methods that are invoked after a transfer changes state, for example, to notify an external application on the consumer side after data has been produced (i.e. the transfer moves to the completed state)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// in TransferListenerExtension.java\n    @Override\n    public void initialize(ServiceExtensionContext context) {\n        // ...\n        var transferProcessObservable = context.getService(TransferProcessObservable.class);\n        transferProcessObservable.registerListener(new MarkerFileCreator(monitor));\n    }\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public class MarkerFileCreator implements TransferProcessListener {\n\n    /**\n     * Callback invoked by the EDC framework when a transfer has completed.\n     *\n     * @param process\n     */\n    @Override\n    public void completed(final TransferProcess process) {\n        // ...\n    }\n}\n")),(0,a.kt)("h2",{id:"perform-a-file-transfer"},"Perform a file transfer"),(0,a.kt)("p",null,"Let's rebuild and run them both:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./gradlew samples:04.1-file-transfer-listener:consumer:build\njava -Dedc.fs.config=samples/04.1-file-transfer-listener/consumer/config.properties -jar samples/04.1-file-transfer-listener/consumer/build/libs/consumer.jar\n# in another terminal window:\n./gradlew samples:04.0-file-transfer:provider:build\njava -Dedc.fs.config=samples/04.0-file-transfer/provider/config.properties -jar samples/04.0-file-transfer/provider/build/libs/provider.jar\n")),(0,a.kt)("p",null,"Assuming you didn't change the config files, the consumer will expose management api on port ",(0,a.kt)("inlineCode",{parentName:"p"},"9192")," and the custom\napi endpoints on port ",(0,a.kt)("inlineCode",{parentName:"p"},"9191")," and the provider will listen on port ",(0,a.kt)("inlineCode",{parentName:"p"},"8181"),".\nOpen another terminal window (or any REST client of your choice) and execute the following REST requests like in the previous sample:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST -H "Content-Type: application/json" -H "X-Api-Key: password" -d @samples/04.0-file-transfer/contractoffer.json "http://localhost:9192/api/v1/management/contractnegotiations"\ncurl -X GET -H \'X-Api-Key: password\' "http://localhost:9192/api/v1/management/contractnegotiations/{UUID}"\ncurl -X POST -H "Content-Type: application/json" -H "X-Api-Key: password" -d @samples/04.0-file-transfer/filetransfer.json "http://localhost:9192/api/v1/management/transferprocess"\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Replace ",(0,a.kt)("inlineCode",{parentName:"strong"},"{UUID}")," in the second request with the UUID received as the response to the first request!")),(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"In ",(0,a.kt)("inlineCode",{parentName:"strong"},"samples/04.0-file-transfer/filetransfer.json"),": Copy the contract agreement's ID from the second response, substitute it for ",(0,a.kt)("inlineCode",{parentName:"strong"},"{agreement ID}")," in the last request JSON body and adjust the ",(0,a.kt)("inlineCode",{parentName:"strong"},"dataDestination.properties.path")," to match your local dev machine!"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"curl")," will return the ID of the transfer process on the consumer connector.")),(0,a.kt)("p",null,"The consumer should spew out logs similar to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"DEBUG 2022-04-14T16:23:13.4042547 Starting transfer for asset test-document\nDEBUG 2022-04-14T16:23:13.4072776 Transfer process initialised 6804ed96-298e-4992-b72d-2366d97cf7a6\nDEBUG 2022-04-14T16:23:13.8801678 TransferProcessManager: Sending process 6804ed96-298e-4992-b72d-2366d97cf7a6 request to http://localhost:8282/api/v1/ids/data\nDEBUG 2022-04-14T16:23:13.9341802 TransferProcessManager: Process 6804ed96-298e-4992-b72d-2366d97cf7a6 is now REQUESTED\nDEBUG 2022-04-14T16:23:18.9048494 Process 6804ed96-298e-4992-b72d-2366d97cf7a6 is now IN_PROGRESS\nDEBUG 2022-04-14T16:23:18.9048494 Process 6804ed96-298e-4992-b72d-2366d97cf7a6 is now COMPLETED\nINFO 2022-04-14T16:23:18.9048494 Transfer Listener successfully wrote file C:\\Users\\pechande\\dev\\coding\\EDC\\marker.txt\n")),(0,a.kt)("p",null,"Then check ",(0,a.kt)("inlineCode",{parentName:"p"},"/path/on/yourmachine"),", which should now contain a file named ",(0,a.kt)("inlineCode",{parentName:"p"},"marker.txt")," in addition to the file defined in ",(0,a.kt)("inlineCode",{parentName:"p"},"dataDestination.properties.path")," in ",(0,a.kt)("inlineCode",{parentName:"p"},"samples/04.0-file-transfer/filetransfer.json"),"."),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/samples/04.0-file-transfer/"},"Previous Chapter")," | ",(0,a.kt)("a",{parentName:"p",href:"/edc-docs/docs/submodule/Connector/samples/04.2-modify-transferprocess/"},"Next Chapter")))}d.isMDXComponent=!0}}]);