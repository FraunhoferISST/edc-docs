"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[1088],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4740:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={},i="Token Based Authentication Service",c={unversionedId:"submodule/Connector/extensions/common/auth/auth-tokenbased/README",id:"submodule/Connector/extensions/common/auth/auth-tokenbased/README",title:"Token Based Authentication Service",description:"The token based authentication service extension is used to secure connector APIs. These APIs are not protected by the AuthenticationService by default. To find out how a specific API is protected please consult its documentation.",source:"@site/docs/submodule/Connector/extensions/common/auth/auth-tokenbased/README.md",sourceDirName:"submodule/Connector/extensions/common/auth/auth-tokenbased",slug:"/submodule/Connector/extensions/common/auth/auth-tokenbased/",permalink:"/edc-docs/docs/submodule/Connector/extensions/common/auth/auth-tokenbased/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/extensions/common/auth/auth-tokenbased/README.md",tags:[],version:"current",frontMatter:{}},u={},l=[{value:"Configuration",id:"configuration",level:2}],s={toc:l};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"token-based-authentication-service"},"Token Based Authentication Service"),(0,a.kt)("p",null,"The token based authentication service extension is used to secure connector APIs. These APIs are not protected by the ",(0,a.kt)("inlineCode",{parentName:"p"},"AuthenticationService")," by default. To find out how a specific API is protected please consult its documentation."),(0,a.kt)("p",null,"APIs, protected by this extension, require a client to authenticate by adding a authentication key to the request header."),(0,a.kt)("p",null,"Authentication Header Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'curl <url> --header "X-API-Key: <key>"\n')),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"edc.api.auth.key"),(0,a.kt)("td",{parentName:"tr",align:"left"},"API Key Header Value"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"edc.api.auth.key.alias"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Secret name of the API Key Header Value, stored in the vault"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"If the API key is stored in the Vault ",(0,a.kt)("em",{parentName:"p"},"and")," in the configuration, the extension will take the key from the vault.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"If no API key is defined, a random value is generated and printed out into the logs."))))}d.isMDXComponent=!0}}]);