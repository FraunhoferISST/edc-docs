"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[9479],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,v=d["".concat(l,".").concat(m)]||d[m]||p[m]||c;return n?r.createElement(v,i(i({ref:t},u),{},{components:n})):r.createElement(v,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,i=new Array(c);i[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var s=2;s<c;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8648:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const c={},i="Configure and run the EDC",a={unversionedId:"submodule/Connector/extensions/control-plane/provision/provision-gcs/README",id:"submodule/Connector/extensions/control-plane/provision/provision-gcs/README",title:"Configure and run the EDC",description:"Authentication",source:"@site/docs/submodule/Connector/extensions/control-plane/provision/provision-gcs/README.md",sourceDirName:"submodule/Connector/extensions/control-plane/provision/provision-gcs",slug:"/submodule/Connector/extensions/control-plane/provision/provision-gcs/",permalink:"/edc-docs/docs/submodule/Connector/extensions/control-plane/provision/provision-gcs/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/extensions/control-plane/provision/provision-gcs/README.md",tags:[],version:"current",frontMatter:{}},l={},s=[{value:"Authentication",id:"authentication",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Set project variable",id:"set-project-variable",level:3},{value:"Service account setup",id:"service-account-setup",level:3}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"configure-and-run-the-edc"},"Configure and run the EDC"),(0,o.kt)("h3",{id:"authentication"},"Authentication"),(0,o.kt)("p",null,"GcsProvisionerExtension authenticates against the Google Cloud API using\nthe ",(0,o.kt)("a",{parentName:"p",href:"https://cloud.google.com/docs/authentication#adc"},"Application Default Credentials"),"."),(0,o.kt)("p",null,"These will automatically be provided if the connector is deployed with the correct service account attached (see below\nin for the project setup and service account creation)."),(0,o.kt)("h3",{id:"configuration"},"Configuration"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Mandatory"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"edc.gcp.project.id"),(0,o.kt)("td",{parentName:"tr",align:"left"},"ID of the GCP projcet to be used"),(0,o.kt)("td",{parentName:"tr",align:null},"X")))),(0,o.kt)("h1",{id:"gcp-project-setup"},"GCP Project Setup"),(0,o.kt)("p",null,"For the provisioning to work we will need to run it with a service account with the correct permissions. There\npermissions are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"creating buckets"),(0,o.kt)("li",{parentName:"ul"},"creating service accounts"),(0,o.kt)("li",{parentName:"ul"},"setting permissions"),(0,o.kt)("li",{parentName:"ul"},"creating access tokens")),(0,o.kt)("h3",{id:"set-project-variable"},"Set project variable"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"PROJECT_ID={PROJECT_ID}\n")),(0,o.kt)("h3",{id:"service-account-setup"},"Service account setup"),(0,o.kt)("p",null,"Create service account that will be used when interacting with the Google Cloud API."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'gcloud iam service-accounts create dataspace-connector \\\n    --description="Service account used for running eclipse dataspace connector" \\\n    --display-name="EDC service account"\n')),(0,o.kt)("p",null,"Assign required roles to service account"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'gcloud projects add-iam-policy-binding $PROJECT_ID \\\n--member="serviceAccount:dataspace-connector@$PROJECT_ID.iam.gserviceaccount.com" \\\n--role="roles/iam.serviceAccountAdmin"\n\ngcloud projects add-iam-policy-binding $PROJECT_ID \\\n--member="serviceAccount:dataspace-connector@$PROJECT_ID.iam.gserviceaccount.com" \\\n--role="roles/storage.admin"\n\ngcloud projects add-iam-policy-binding $PROJECT_ID \\\n--member="serviceAccount:dataspace-connector@$PROJECT_ID.iam.gserviceaccount.com" \\\n--role="roles/iam.serviceAccountTokenCreator"\n')))}p.isMDXComponent=!0}}]);