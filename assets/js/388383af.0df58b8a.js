"use strict";(self.webpackChunkedc_docs=self.webpackChunkedc_docs||[]).push([[9898],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(f,l(l({ref:t},d),{},{components:n})):r.createElement(f,l({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7433:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},l="S3 Core",i={unversionedId:"submodule/Connector/extensions/common/aws/aws-s3-core/README",id:"submodule/Connector/extensions/common/aws/aws-s3-core/README",title:"S3 Core",description:"This extension registers an AWS credentials provider that can be used by all the S3 related extensions.",source:"@site/docs/submodule/Connector/extensions/common/aws/aws-s3-core/README.md",sourceDirName:"submodule/Connector/extensions/common/aws/aws-s3-core",slug:"/submodule/Connector/extensions/common/aws/aws-s3-core/",permalink:"/edc-docs/docs/submodule/Connector/extensions/common/aws/aws-s3-core/",draft:!1,editUrl:"https://github.com/FraunhoferISST/edc-docs/tree/master/docs/submodule/Connector/extensions/common/aws/aws-s3-core/README.md",tags:[],version:"current",frontMatter:{}},s={},c=[{value:"Configuration",id:"configuration",level:2}],d={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"s3-core"},"S3 Core"),(0,a.kt)("p",null,"This extension registers an AWS credentials provider that can be used by all the S3 related extensions."),(0,a.kt)("p",null,"The credentials lookup works in this order:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"vault (through the keys specified in the ",(0,a.kt)("a",{parentName:"li",href:"#configuration"},"Configuration"),")"),(0,a.kt)("li",{parentName:"ul"},"if there are no vault keys, the AWS ",(0,a.kt)("inlineCode",{parentName:"li"},"DefaultCredentialProvider")," will look at:",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("ol",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ol"},"Java System Properties - aws.accessKeyId and aws.secretAccessKey"),(0,a.kt)("li",{parentName:"ol"},"Environment Variables - AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY"),(0,a.kt)("li",{parentName:"ol"},"Credential profiles file at the default location (~/.aws/credentials) shared by all AWS SDKs and the AWS CLI"),(0,a.kt)("li",{parentName:"ol"},'Credentials delivered through the Amazon EC2 container service if AWS_CONTAINER_CREDENTIALS_RELATIVE_URI" environment variable is set and security manager has permission to access the variable,'),(0,a.kt)("li",{parentName:"ol"},"Instance profile credentials delivered through the Amazon EC2 metadata service "))))),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,a.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"edc.aws.access.key")),(0,a.kt)("td",{parentName:"tr",align:null},"The key of the secret where the AWS Access Key Id is stored."),(0,a.kt)("td",{parentName:"tr",align:null},"false"),(0,a.kt)("td",{parentName:"tr",align:null},"null")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"edc.aws.secret.access.key")),(0,a.kt)("td",{parentName:"tr",align:null},"The key of the secret where the AWS Secret Access Key is stored."),(0,a.kt)("td",{parentName:"tr",align:null},"false"),(0,a.kt)("td",{parentName:"tr",align:null},"5")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"edc.aws.endpoint.override")),(0,a.kt)("td",{parentName:"tr",align:null},"If valued, the AWS clients will point to the specified endpoint."),(0,a.kt)("td",{parentName:"tr",align:null},"false"),(0,a.kt)("td",{parentName:"tr",align:null},"null")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"edc.aws.client.async.thread-pool-size")),(0,a.kt)("td",{parentName:"tr",align:null},"The size of the thread pool used for the async clients."),(0,a.kt)("td",{parentName:"tr",align:null},"false"),(0,a.kt)("td",{parentName:"tr",align:null},"50")))))}u.isMDXComponent=!0}}]);